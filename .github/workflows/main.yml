name: Test
on:
  push:
  pull_request:
  schedule:
    - cron:  '30 5 6 * *'
jobs:
  pre_build:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          concurrent_skipping: 'same_content'
          paths_ignore: '["README.md", "docs/*", "examples/*", "icons/*"]'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  build:
    needs: pre_build
    if: ${{ needs.pre_build.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['2.7', '3.6', '3.8']
      fail-fast: false
    steps:
        - name: "Software Install - Ubuntu"
          if: ${{ matrix.os == 'ubuntu-latest' }}
          run: |
            sudo apt-get install -y \
              build-essential \
              ca-certificates \
              curl \
              git \
              gzip \
              libfftw3-dev \
              libhdf5-dev \
              libgdbm-dev \
              libgtk-3-dev \
              pkg-config
        - name: "Software Install - MacOS"
          if: ${{ matrix.os == 'macos-latest' }}
          run: |
            brew install \
              fftw \
              hdf5 \
              pkg-config 
        - uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - uses: actions/checkout@v2
        - name: "Software Install - Python"
          run: |
            pip install numpy
            pip install -r requirements.txt
            pip install pylint
        - name: Test
          continue-on-error: ${{ matrix.python-version == '2.7' }}
          run: |
            cd tests
            python -m unittest discover
